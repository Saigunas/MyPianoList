@page "/pianosheets/delete"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using MyPianoList.Application.Interfaces
@using MyPianoList.Infrastructure
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyPianoList.Domain

@inject IPianoSheetService PianoSheetService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>PianoSheet</h2>
    <hr />
    @if (pianosheet is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@pianosheet.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Composer</dt>
            <dd class="col-sm-10">@pianosheet.Composer</dd>
        </dl>
        <EditForm method="post" Model="pianosheet" OnValidSubmit="DeletePianoSheet" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(pianosheet is null)">Delete</button> |
            <a href="/pianosheets">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private PianoSheet? pianosheet;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        pianosheet = await PianoSheetService.GetByIdAsync(Id);

        if (pianosheet is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeletePianoSheet()
    {
        await PianoSheetService.RemoveByIdAsync(Id);
        NavigationManager.NavigateTo("/pianosheets");
    }
}
